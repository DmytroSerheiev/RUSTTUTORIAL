{"message":"expected item after doc comment","code":null,"level":"error","spans":[{"file_name":"src\\lib.rs","byte_start":880,"byte_end":887,"line_start":45,"line_end":45,"column_start":1,"column_end":8,"is_primary":true,"text":[{"text":"/// ```","highlight_start":1,"highlight_end":8}],"label":"this doc comment doesn't document anything","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":0,"byte_end":879,"line_start":1,"line_end":44,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"/// This function divides two numbers.","highlight_start":1,"highlight_end":39},{"text":"///","highlight_start":1,"highlight_end":4},{"text":"/// # Example #1: 10 / 2 == 5","highlight_start":1,"highlight_end":30},{"text":"///","highlight_start":1,"highlight_end":4},{"text":"/// ```","highlight_start":1,"highlight_end":8},{"text":"/// use doctests_exercise::div;","highlight_start":1,"highlight_end":32},{"text":"/// let result = div(10, 2);","highlight_start":1,"highlight_end":29},{"text":"/// assert_eq!(result, 5);","highlight_start":1,"highlight_end":27},{"text":"/// ```","highlight_start":1,"highlight_end":8},{"text":"///","highlight_start":1,"highlight_end":4},{"text":"/// # Example #2: 6 / 3 == 2","highlight_start":1,"highlight_end":29},{"text":"///","highlight_start":1,"highlight_end":4},{"text":"/// ```","highlight_start":1,"highlight_end":8},{"text":"/// use doctests_exercise::div;","highlight_start":1,"highlight_end":32},{"text":"/// let result = div(6, 3);","highlight_start":1,"highlight_end":28},{"text":"/// assert_eq!(result, 2);","highlight_start":1,"highlight_end":27},{"text":"/// ```","highlight_start":1,"highlight_end":8},{"text":"///","highlight_start":1,"highlight_end":4},{"text":"/// # Panics","highlight_start":1,"highlight_end":13},{"text":"///","highlight_start":1,"highlight_end":4},{"text":"/// The function panics if the second argument is zero.","highlight_start":1,"highlight_end":56},{"text":"///","highlight_start":1,"highlight_end":4},{"text":"/// ```rust,should_panic","highlight_start":1,"highlight_end":25},{"text":"/// // panics on division by zero","highlight_start":1,"highlight_end":34},{"text":"/// use doctests_exercise::div;","highlight_start":1,"highlight_end":32},{"text":"/// assert!(std::panic::catch_unwind(|| div(10, 0)).is_err());","highlight_start":1,"highlight_end":63},{"text":"/// ```","highlight_start":1,"highlight_end":8},{"text":"","highlight_start":1,"highlight_end":1},{"text":"/// This function subtracts two numbers.","highlight_start":1,"highlight_end":41},{"text":"///","highlight_start":1,"highlight_end":4},{"text":"/// # Example #1: 9 - 2 == 7","highlight_start":1,"highlight_end":29},{"text":"///","highlight_start":1,"highlight_end":4},{"text":"/// ```","highlight_start":1,"highlight_end":8},{"text":"/// use doctests_exercise::sub;","highlight_start":1,"highlight_end":32},{"text":"/// let result = sub(9, 2);","highlight_start":1,"highlight_end":28},{"text":"/// assert_eq!(result, 7);","highlight_start":1,"highlight_end":27},{"text":"/// ```","highlight_start":1,"highlight_end":8},{"text":"///","highlight_start":1,"highlight_end":4},{"text":"/// # Example #2: 6 - 9 == -3","highlight_start":1,"highlight_end":30},{"text":"///","highlight_start":1,"highlight_end":4},{"text":"/// ```","highlight_start":1,"highlight_end":8},{"text":"/// use doctests_exercise::sub;","highlight_start":1,"highlight_end":32},{"text":"/// let result = sub(6, 9);","highlight_start":1,"highlight_end":28},{"text":"/// assert_eq!(result, -3);","highlight_start":1,"highlight_end":28}],"label":"other attributes here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected item after doc comment\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:45:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m/// This function divides two numbers.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m///\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m/// # Example #1: 10 / 2 == 5\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m///\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m/// let result = sub(6, 9);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m/// assert_eq!(result, -3);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|___________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mother attributes here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m/// ```\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthis doc comment doesn't document anything\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to previous error\u001b[0m\n\n"}
